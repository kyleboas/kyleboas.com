name: Post Latest Blog from RSS to Bluesky

on:
  push:
    paths:
      - _posts/**

  workflow_dispatch:

jobs:
  fetch-and-post:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Check for new files only
      - name: Check for newly added files
        id: check_new_files
        run: |
          git fetch --no-tags origin ${{ github.ref }} --depth=2
          added_files=$(git diff --name-status HEAD^ HEAD | awk '$1 == "A" {print $2}' | grep '^_posts/')
          
          if [ -z "$added_files" ]; then
            echo "No new posts detected. Exiting workflow."
            exit 0
          else
            echo "New posts detected:"
            echo "$added_files"
          fi

      # Initial two-minute delay
      - name: Initial Delay
        run: |
          echo "Waiting for 1 minute before starting..."
          sleep 60

      # Install xmllint and dateutils
      - name: Install xmllint and dateutils
        run: |
          sudo apt-get update && sudo apt-get install -y libxml2-utils dateutils

      # Fetch the latest blog post from RSS feed
      - name: Fetch Latest Blog Post
        id: fetch_post
        run: |
          RSS_FEED_URL="https://kyleboas.com/feed"
         
          response=$(curl -s "$RSS_FEED_URL")
          description=$(echo "$response" | xmllint --xpath "string(//item[1]/title)" -)
          url=$(echo "$response" | xmllint --xpath "string(//item[1]/link)" -)
          pub_date=$(echo "$response" | xmllint --xpath "string(//item[1]/pubDate)" -)

          description=$(echo "$description" | tr '\n' '\0' | xargs -0)
          preview="$description $url"

          echo "preview=$preview" >> $GITHUB_ENV
          echo "rss_url=$url" >> $GITHUB_ENV

      # Post to Bluesky
      - name: Post to Bluesky
        uses: myConsciousness/bluesky-post@v5
        with:
          text: "${{ env.preview }}"
          link-preview-url: "${{ env.rss_url }}"
          identifier: kyleboas.com
          password: ${{ secrets.BSS }}
