name: Post Latest Blog from RSS to Bluesky

on:
  push:
    paths:
      - _posts/**
  workflow_dispatch:

jobs:
  fetch-and-post:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # Detect newly added files (so we can short-circuit gracefully)
      - name: Check for newly added files
        id: check_new_files
        shell: bash
        run: |
          set -euo pipefail
          git fetch --no-tags origin "${GITHUB_REF}" --depth=2 || true
          added_files="$(git diff --name-status HEAD^ HEAD | awk '$1 == "A" {print $2}' | grep '^_posts/' || true)"
          if [ -n "$added_files" ]; then
            echo "found=true" >> "$GITHUB_OUTPUT"
            echo "New posts detected:"
            echo "$added_files"
          else
            echo "found=false" >> "$GITHUB_OUTPUT"
            echo "No new posts detected."
          fi

      - name: Initial Delay
        if: steps.check_new_files.outputs.found == 'true'
        run: |
          echo "Waiting for 1 minute before starting…"
          sleep 60

      - name: Install xmllint and dateutils
        if: steps.check_new_files.outputs.found == 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y libxml2-utils dateutils

      - name: Fetch Latest Blog Post (RSS)
        id: fetch_post
        if: steps.check_new_files.outputs.found == 'true'
        shell: bash
        run: |
          set -euo pipefail

          RSS_FEED_URL="https://kyleboas.com/feed"
          response="$(curl -fsSL "$RSS_FEED_URL")"

          # Extract fields
          title="$(printf '%s' "$response" | xmllint --xpath 'string(//item[1]/title)' -)"
          link_raw="$(printf '%s' "$response" | xmllint --xpath 'string(//item[1]/link)' -)"
          pub_date="$(printf '%s' "$response" | xmllint --xpath 'string(//item[1]/pubDate)' -)"

          # Compare calendar date (RFC2822 → DOW, DD, Mon, YYYY)
          today="$(date -R)"
          pub_date_only="$(awk '{print $1", "$2" "$3" "$4}' <<< "$pub_date")"
          today_only="$(awk '{print $1", "$2" "$3" "$4}' <<< "$today")"

          if [[ "$pub_date_only" != "$today_only" ]]; then
            echo "should_post=false" >> "$GITHUB_OUTPUT"
            echo "Latest item ($pub_date_only) is not from today ($today_only). Skipping."
            exit 0
          fi

          # --- SANITIZE LINK STRICTLY ---
          # 1) trim whitespace/newlines
          link="$(printf '%s' "$link_raw" | tr -d '\r' | xargs)"
          # 2) unescape minimal HTML entities (&amp; -> &)
          link="${link//&amp;/&}"
          # 3) if it lacks a scheme, prepend https://
          if ! grep -Eiq '^(https?)://.' <<< "$link"; then
            link="https://$link"
          fi
          # 4) final validation: must be a clean URI (no spaces)
          if grep -q '[[:space:]]' <<< "$link"; then
            echo "WARN: RSS link contains whitespace after sanitize; will NOT set link-preview-url."
            valid_link_preview=false
          else
            valid_link_preview=true
          fi

          # Compose post text (<=300) -- space only between title and link
          raw_text="${title} ${link}"
          if [ "${#raw_text}" -gt 300 ]; then
            trimmed="$(printf '%s' "$raw_text" | cut -c1-297)…"
          else
            trimmed="$raw_text"
          fi

          echo "should_post=true" >> "$GITHUB_OUTPUT"
          printf 'text=%s\n' "$trimmed" >> "$GITHUB_OUTPUT"
          printf 'url=%s\n' "$link" >> "$GITHUB_OUTPUT"
          printf 'valid_link_preview=%s\n' "$valid_link_preview" >> "$GITHUB_OUTPUT"

      - name: Post to Bluesky (with preview)
        if: steps.fetch_post.outputs.should_post == 'true' && steps.fetch_post.outputs.valid_link_preview == 'true'
        uses: myConsciousness/bluesky-post@v5
        with:
          text: ${{ steps.fetch_post.outputs.text }}
          link-preview-url: ${{ steps.fetch_post.outputs.url }}
          identifier: kyleboas.com
          password: ${{ secrets.BSS }}

      - name: Post to Bluesky (no preview fallback)
        if: steps.fetch_post.outputs.should_post == 'true' && steps.fetch_post.outputs.valid_link_preview != 'true'
        uses: myConsciousness/bluesky-post@v5
        with:
          text: ${{ steps.fetch_post.outputs.text }}
          identifier: kyleboas.com
          password: ${{ secrets.BSS }}